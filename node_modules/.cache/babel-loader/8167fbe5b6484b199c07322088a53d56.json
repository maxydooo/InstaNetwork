{"ast":null,"code":"var _jsxFileName = \"/home/student/mlankford/CS370/InstaNetwork/src/ImageUpload.js\";\nimport React, { useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport { storage, db } from \"./firebase\";\nimport firebase from \"firebase\";\nimport './ImageUpload.css';\n\nfunction ImageUpload({\n  username\n}) {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption] = useState('');\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      // progress function ..\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      // Error function...\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function...\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        // post image inside db\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        });\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageupload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"progress\", {\n    className: \"imageupload_progress\",\n    value: progress,\n    max: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter a caption...\",\n    onChange: event => setCaption(event.target.value),\n    value: caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, \"Upload\"));\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/home/student/mlankford/CS370/InstaNetwork/src/ImageUpload.js"],"names":["React","useState","Button","storage","db","firebase","ImageUpload","username","image","setImage","progress","setProgress","caption","setCaption","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","event","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from \"@material-ui/core\";\nimport { storage, db } from \"./firebase\";\nimport firebase from \"firebase\";\nimport './ImageUpload.css';\n\n\nfunction ImageUpload ({username}) {\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [caption, setCaption ] = useState('');\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // progress function ..\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n\n      },\n      (error) => {\n        // Error function...\n        console.log(error);\n        alert(error.message);\n        },\n\n        () => {\n          // complete function...\n          storage\n            .ref(\"images\")\n            .child(image.name)\n            .getDownloadURL()\n            .then(url => {\n              // post image inside db\n              db.collection(\"posts\").add({\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                caption: caption,\n                imageUrl: url,\n                username: username\n                });\n                setProgress(0);\n                setCaption(\"\");\n                setImage(null);\n            });\n       }\n    );\n };\n\n\n return (\n     <div className=\"imageupload\">\n         \n         <progress className=\"imageupload_progress\" value ={progress} max=\"100\" />\n         <input type = \"text\" placeholder='Enter a caption...' onChange={event => setCaption(event.target.value) } value={caption}/>\n         <input type = \"file\" onChange={handleChange} />\n         <Button onClick={handleUpload}>\n             Upload\n         </Button>\n     </div>\n )\n    \n}\n\nexport default ImageUpload"]},"metadata":{},"sourceType":"module"}